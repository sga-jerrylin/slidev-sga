# Slidev CLI 专用 Dockerfile
# 用于运行单个演示文稿

FROM node:18-alpine AS builder

WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    libc6-compat

# 安装 pnpm
RUN npm install -g pnpm@10.13.1

# 复制 package 配置文件
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/slidev/package.json ./packages/slidev/
COPY packages/client/package.json ./packages/client/
COPY packages/parser/package.json ./packages/parser/
COPY packages/types/package.json ./packages/types/

# 复制 patches 目录（pnpm需要）
COPY patches ./patches

# 安装依赖
RUN pnpm install --no-frozen-lockfile

# 复制源代码
COPY packages ./packages
COPY tsconfig.json ./

# 构建 Slidev CLI
RUN pnpm --filter @slidev/cli build

# ================================
# 运行阶段
# ================================
FROM node:18-alpine AS runtime

WORKDIR /app

# 安装运行时依赖
RUN apk add --no-cache \
    git \
    wget

# 创建非 root 用户
RUN addgroup -g 1001 -S slidev && \
    adduser -S slidev -u 1001

# 从构建阶段复制构建好的包
COPY --from=builder /app/packages/slidev ./packages/slidev
COPY --from=builder /app/packages/client ./packages/client
COPY --from=builder /app/packages/parser ./packages/parser
COPY --from=builder /app/packages/types ./packages/types

# 全局安装 Slidev CLI
RUN npm install -g ./packages/slidev

# 创建 slides 目录
RUN mkdir -p /slides && \
    chown -R slidev:slidev /slides /app

# 切换到非 root 用户
USER slidev

# 设置环境变量
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000

# 工作目录设置为 slides
WORKDIR /slides

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# 启动命令
CMD ["slidev", "--host", "0.0.0.0", "--port", "3000"]
